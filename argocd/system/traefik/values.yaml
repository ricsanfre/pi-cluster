# Dashboard Ingress configuration
# helm chart creates dashboard ingress-route but it does not support tls specification yet
# https://github.com/traefik/traefik-helm-chart/issues/763
# Creating with specific template
ingress:
  enabled: true
  host: traefik.picluster.ricsanfre.com
  # configure cert-manager issuer
  certmanager:
    # tlsIssuer=letsecrypt to generate valid TLS certficiate using IONOS API
    # tlsIssuer=ca to generate a CA-signed certificate (not valid)
    tlsIssuer: letsencrypt
  # Enabling traefik basic authorization, reusing global middleware created for Traefik
  basicAuth:
    enable: true
    middlewareName: basic-auth
    middlewareNamespace: traefik

# Prometheus servicemonitor configuration
serviceMonitor:
  enable: true
  release: monitoring

###################
# Traefik subchart
###################

traefik:
  # Configure access log
  logs:
    access:
      # Enable access log
      enabled: true
      # Generate access log in json format
      format: json
      # Configure access log field
      fields:
        # keep all access fields
        general:
          defaultmode: keep
        # Add header field B3 tracing protocol header field
        headers:
          defaultmode: drop
          names:
            X-B3-Traceid: keep

  # Print access log to file instead of stdout
  additionalArguments:
    - "--accesslog.filepath=/data/access.log"

  deployment:
    # Linkerd ingress configuration
    podAnnotations:
      linkerd.io/inject: ingress
      config.linkerd.io/skip-outbound-ports: "443"
    # Access log sidecar container
    additionalContainers:
      - name: stream-accesslog
        image: busybox
        args:
        - /bin/sh
        - -c
        - tail -n+1 -F /data/access.log
        imagePullPolicy: Always
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data
  # Set specific LoadBalancer IP address for Ingress service
  service:
    spec:
      loadBalancerIP: 10.0.0.111

  providers:
    kubernetesCRD:
      enabled: true
      # Enable cross namespace references
      allowCrossNamespace: true
    # traefik by default does not update status.loadbalancer field
    # In argo-cd, this field is used to obtaing the ingress object health status
    # ingress resource are not getting health status and so application gets stucked
    # See issue https://github.com/argoproj/argo-cd/issues/968
    # Traefik need to be confgured enabling published service
    # https://doc.traefik.io/traefik/providers/kubernetes-ingress/#publishedservice
    kubernetesIngress:
      publishedService:
        enabled: true

  # Enable prometheus metric service
  metrics:
    prometheus:
      service:
        enabled: true

  # Configuring tracing backend
  tracing:
    zipkin:
      httpEndpoint: http://tracing-tempo-distributor.tracing.svc.cluster.local:9411/api/v2/spans
      sameSpan: true
      id128Bit: true
      sampleRate: 1.0

  # Disable dashboard ingress-route
  # It does not support tls specification yet
  # https://github.com/traefik/traefik-helm-chart/issues/763
  ingressRoute:
    dashboard:
      enabled: false

